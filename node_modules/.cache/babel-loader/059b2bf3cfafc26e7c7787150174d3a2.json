{"ast":null,"code":"var _jsxFileName = \"/Users/brunonovarini/project-would-you-rather/src/components/Leaderboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Leaderblock from \"./Leaderblock\";\nimport { Grid } from \"@material-ui/core\";\n\nclass Leaderboard extends Component {\n  render() {\n    const {\n      orderedIds\n    } = this.props;\n    let i = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, orderedIds.map(id => /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Leaderblock, {\n      id: id,\n      position: i = i + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users\n}) {\n  const scoresArray = Object.values(users).map(({\n    id,\n    answers,\n    questions\n  }) => ({\n    [id]: Object.keys(answers).length + Object.keys(questions).length\n  })); //Used solution from https://stackoverflow.com/questions/4215737/convert-array-to-object\n\n  const scoresObject = scoresArray.reduce(function (result, item) {\n    var key = Object.keys(item)[0]; //first property: id\n\n    result[key] = item[key];\n    return result;\n  }, {});\n  return {\n    authedUser,\n    orderedIds: Object.keys(scoresObject).sort((a, b) => scoresObject[b] - scoresObject[a])\n  };\n}\n\nexport default connect(mapStateToProps)(Leaderboard);","map":{"version":3,"sources":["/Users/brunonovarini/project-would-you-rather/src/components/Leaderboard.js"],"names":["React","Component","connect","Leaderblock","Grid","Leaderboard","render","orderedIds","props","i","map","id","mapStateToProps","authedUser","users","scoresArray","Object","values","answers","questions","keys","length","scoresObject","reduce","result","item","key","sort","a","b"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKC,KAA5B;AACA,QAAIC,CAAC,GAAG,CAAR;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,UAAU,CAACG,GAAX,CAAgBC,EAAD,iBACd;AAAI,MAAA,GAAG,EAAEA,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,EAAE,EAAEA,EAAjB;AAAqB,MAAA,QAAQ,EAAGF,CAAC,GAAGA,CAAC,GAAG,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CADH,CADF,CADF,CADF;AAaD;;AAlBiC;;AAoBpC,SAASG,eAAT,CAAyB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAzB,EAAgD;AAC9C,QAAMC,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcH,KAAd,EAAqBJ,GAArB,CAClB,CAAC;AAAEC,IAAAA,EAAF;AAAMO,IAAAA,OAAN;AAAeC,IAAAA;AAAf,GAAD,MAAiC;AAC/B,KAACR,EAAD,GAAMK,MAAM,CAACI,IAAP,CAAYF,OAAZ,EAAqBG,MAArB,GAA8BL,MAAM,CAACI,IAAP,CAAYD,SAAZ,EAAuBE;AAD5B,GAAjC,CADkB,CAApB,CAD8C,CAO9C;;AACA,QAAMC,YAAY,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC9D,QAAIC,GAAG,GAAGV,MAAM,CAACI,IAAP,CAAYK,IAAZ,EAAkB,CAAlB,CAAV,CAD8D,CAC9B;;AAChCD,IAAAA,MAAM,CAACE,GAAD,CAAN,GAAcD,IAAI,CAACC,GAAD,CAAlB;AACA,WAAOF,MAAP;AACD,GAJoB,EAIlB,EAJkB,CAArB;AAMA,SAAO;AACLX,IAAAA,UADK;AAELN,IAAAA,UAAU,EAAES,MAAM,CAACI,IAAP,CAAYE,YAAZ,EAA0BK,IAA1B,CACV,CAACC,CAAD,EAAIC,CAAJ,KAAUP,YAAY,CAACO,CAAD,CAAZ,GAAkBP,YAAY,CAACM,CAAD,CAD9B;AAFP,GAAP;AAMD;;AAED,eAAe1B,OAAO,CAACU,eAAD,CAAP,CAAyBP,WAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Leaderblock from \"./Leaderblock\";\nimport { Grid } from \"@material-ui/core\";\n\nclass Leaderboard extends Component {\n  render() {\n    const { orderedIds } = this.props;\n    let i = 0;\n\n    return (\n      <div className=\"center\">\n        <Grid container>\n          <Grid item>\n            {orderedIds.map((id) => (\n              <li key={id}>\n                <Leaderblock id={id} position={(i = i + 1)} />\n              </li>\n            ))}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps({ authedUser, users }) {\n  const scoresArray = Object.values(users).map(\n    ({ id, answers, questions }) => ({\n      [id]: Object.keys(answers).length + Object.keys(questions).length,\n    })\n  );\n\n  //Used solution from https://stackoverflow.com/questions/4215737/convert-array-to-object\n  const scoresObject = scoresArray.reduce(function (result, item) {\n    var key = Object.keys(item)[0]; //first property: id\n    result[key] = item[key];\n    return result;\n  }, {});\n\n  return {\n    authedUser,\n    orderedIds: Object.keys(scoresObject).sort(\n      (a, b) => scoresObject[b] - scoresObject[a]\n    ),\n  };\n}\n\nexport default connect(mapStateToProps)(Leaderboard);\n"]},"metadata":{},"sourceType":"module"}