{"ast":null,"code":"var _jsxFileName = \"/Users/brunonovarini/project-would-you-rather/src/components/PollDashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Poll from \"./Poll\";\n\nclass PollDashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      answered: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, \"Unanswered Questions\"), this.props.questionIds.map(id => this.props.answered[id] == null && /*#__PURE__*/React.createElement(Poll, {\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 54\n      }\n    })), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \"Answered Questions\"), this.props.questionIds.map(id => this.props.answered[id] != null && /*#__PURE__*/React.createElement(Poll, {\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 54\n      }\n    })));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}) {\n  return {\n    authedUser,\n    questionIds: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n    answered: users[authedUser].answers\n  };\n}\n\nexport default connect(mapStateToProps)(PollDashboard);","map":{"version":3,"sources":["/Users/brunonovarini/project-would-you-rather/src/components/PollDashboard.js"],"names":["React","Component","connect","Poll","PollDashboard","state","answered","render","props","questionIds","map","id","mapStateToProps","authedUser","users","questions","Object","keys","sort","a","b","timestamp","answers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCI,KADoC,GAC5B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD4B;AAAA;;AAKpCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CACEC,EAAD,IAAQ,KAAKH,KAAL,CAAWF,QAAX,CAAoBK,EAApB,KAA2B,IAA3B,iBAAmC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEA,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD5C,CAFH,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,EAMG,KAAKH,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CACEC,EAAD,IAAQ,KAAKH,KAAL,CAAWF,QAAX,CAAoBK,EAApB,KAA2B,IAA3B,iBAAmC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEA,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD5C,CANH,CADF;AAYD;;AAlBmC;;AAqBtC,SAASC,eAAT,CAAyB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAzB,EAA2D;AACzD,SAAO;AACLF,IAAAA,UADK;AAELJ,IAAAA,WAAW,EAAEO,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,IAAvB,CACX,CAACC,CAAD,EAAIC,CAAJ,KAAUL,SAAS,CAACK,CAAD,CAAT,CAAaC,SAAb,GAAyBN,SAAS,CAACI,CAAD,CAAT,CAAaE,SADrC,CAFR;AAKLf,IAAAA,QAAQ,EAAEQ,KAAK,CAACD,UAAD,CAAL,CAAkBS;AALvB,GAAP;AAOD;;AAED,eAAepB,OAAO,CAACU,eAAD,CAAP,CAAyBR,aAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Poll from \"./Poll\";\n\nclass PollDashboard extends Component {\n  state = {\n    answered: false,\n  };\n\n  render() {\n    return (\n      <div className=\"center\">\n        <h1>Unanswered Questions</h1>\n        {this.props.questionIds.map(\n          (id) => this.props.answered[id] == null && <Poll id={id} />\n        )}\n        <h1>Answered Questions</h1>\n        {this.props.questionIds.map(\n          (id) => this.props.answered[id] != null && <Poll id={id} />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }) {\n  return {\n    authedUser,\n    questionIds: Object.keys(questions).sort(\n      (a, b) => questions[b].timestamp - questions[a].timestamp\n    ),\n    answered: users[authedUser].answers,\n  };\n}\n\nexport default connect(mapStateToProps)(PollDashboard);\n"]},"metadata":{},"sourceType":"module"}