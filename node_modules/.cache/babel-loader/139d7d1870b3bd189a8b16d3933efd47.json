{"ast":null,"code":"var _jsxFileName = \"/Users/brunonovarini/project-would-you-rather/src/components/Leaderboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Leaderblock from \"./Leaderblock\";\nimport { Grid, Paper } from \"@material-ui/core\";\n\nclass Leaderboard extends Component {\n  render() {\n    const {\n      orderedIds\n    } = this.props;\n    let i = 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      elevation: 2,\n      className: \"poll-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }\n    }, `${name} asks`), /*#__PURE__*/React.createElement(Divider, {\n      light: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      alignContent: \"center\",\n      justify: \"space-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatarURL,\n      alt: \"User avatar\",\n      className: \"question-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      className: \"poll-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, \"Would you rather\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, optionOne.text, \" or...\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/questions/${id}`,\n      className: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"View Poll\"))))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"column\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, orderedIds.map(id => /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Leaderblock, {\n      id: id,\n      position: i = i + 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users\n}) {\n  const scoresArray = Object.values(users).map(({\n    id,\n    answers,\n    questions\n  }) => ({\n    [id]: Object.keys(answers).length + Object.keys(questions).length\n  })); //Used solution from https://stackoverflow.com/questions/4215737/convert-array-to-object\n\n  const scoresObject = scoresArray.reduce(function (result, item) {\n    var key = Object.keys(item)[0]; //first property: id\n\n    result[key] = item[key];\n    return result;\n  }, {});\n  return {\n    authedUser,\n    orderedIds: Object.keys(scoresObject).sort((a, b) => scoresObject[b] - scoresObject[a])\n  };\n}\n\nexport default connect(mapStateToProps)(Leaderboard);","map":{"version":3,"sources":["/Users/brunonovarini/project-would-you-rather/src/components/Leaderboard.js"],"names":["React","Component","connect","Leaderblock","Grid","Paper","Leaderboard","render","orderedIds","props","i","name","avatarURL","optionOne","text","id","map","mapStateToProps","authedUser","users","scoresArray","Object","values","answers","questions","keys","length","scoresObject","reduce","result","item","key","sort","a","b"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Leaderblock from \"./Leaderblock\";\nimport { Grid, Paper } from \"@material-ui/core\";\n\nclass Leaderboard extends Component {\n  render() {\n    const { orderedIds } = this.props;\n    let i = 0;\n\n    return (\n      <div>\n        <Paper elevation={2} className=\"poll-container\">\n          <Typography variant=\"h6\" component=\"h4\">{`${name} asks`}</Typography>\n          <Divider light />\n          <Grid\n            container\n            direction=\"row\"\n            alignContent=\"center\"\n            justify=\"space-around\"\n          >\n            <Grid item>\n              <img\n                src={avatarURL}\n                alt=\"User avatar\"\n                className=\"question-avatar\"\n              />\n            </Grid>\n            <Grid item className=\"poll-info-container\">\n              <Typography variant=\"h6\">Would you rather</Typography>\n              <Typography variant=\"body1\">{optionOne.text} or...</Typography>\n              <Link to={`/questions/${id}`} className=\"link\">\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  component=\"span\"\n                >\n                  View Poll\n                </Button>\n              </Link>\n            </Grid>\n          </Grid>\n        </Paper>\n        <Grid container direction=\"column\" spacing={2}></Grid>\n        <ul>\n          {orderedIds.map((id) => (\n            <li key={id}>\n              <Leaderblock id={id} position={(i = i + 1)} />\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps({ authedUser, users }) {\n  const scoresArray = Object.values(users).map(\n    ({ id, answers, questions }) => ({\n      [id]: Object.keys(answers).length + Object.keys(questions).length,\n    })\n  );\n\n  //Used solution from https://stackoverflow.com/questions/4215737/convert-array-to-object\n  const scoresObject = scoresArray.reduce(function (result, item) {\n    var key = Object.keys(item)[0]; //first property: id\n    result[key] = item[key];\n    return result;\n  }, {});\n\n  return {\n    authedUser,\n    orderedIds: Object.keys(scoresObject).sort(\n      (a, b) => scoresObject[b] - scoresObject[a]\n    ),\n  };\n}\n\nexport default connect(mapStateToProps)(Leaderboard);\n"]},"metadata":{},"sourceType":"module"}