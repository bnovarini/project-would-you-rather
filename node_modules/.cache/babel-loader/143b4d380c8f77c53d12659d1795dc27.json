{"ast":null,"code":"var _jsxFileName = \"/Users/brunonovarini/project-would-you-rather/src/components/Question.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddQuestionAnswer } from \"../actions/shared\";\nimport { Paper, Typography, Divider, Grid } from \"@material-ui/core\";\n\nclass Question extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: null\n    };\n\n    this.handleOptionChange = e => {\n      this.setState({\n        selectedOption: e.target.value\n      });\n    };\n\n    this.handleAnswer = e => {\n      e.preventDefault();\n      const {\n        dispatch,\n        authedUser\n      } = this.props;\n      const {\n        question_id\n      } = this.props.match.params;\n      dispatch(handleAddQuestionAnswer({\n        qid: question_id,\n        authedUser,\n        answer: this.state.selectedOption\n      }));\n    };\n  }\n\n  render() {\n    const {\n      question,\n      questionAuthor,\n      authedUser\n    } = this.props; //Handling question id not found\n\n    if (Object.keys(question).length === 0) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }\n      }, \"This question doesn't exist\");\n    }\n\n    const {\n      optionOne,\n      optionTwo\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = questionAuthor;\n    const answered = optionOne.votes.includes(authedUser) || optionTwo.votes.includes(authedUser);\n    const totalVotes = optionOne.votes.length + optionTwo.votes.length;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      elevation: 2,\n      className: \"poll-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, !answered ? `${name} asks` : `Asked by ${name}`), /*#__PURE__*/React.createElement(Divider, {\n      light: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      alignContent: \"center\",\n      justify: \"space-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      className: \"question-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatarURL,\n      alt: \"User avatar\",\n      className: \"question-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      className: \"question-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, !answered ? \"Would you rather\" : \"Results\"), !answered ? /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"optionOne\",\n      checked: this.state.selectedOption === \"optionOne\",\n      onChange: this.handleOptionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }), optionOne.text, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      value: \"optionTwo\",\n      checked: this.state.selectedOption === \"optionTwo\",\n      onChange: this.handleOptionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }), optionTwo.text, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: this.state.selectedOption === null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, \"Submit\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: optionOne.votes.includes(authedUser) ? \"answered-vote\" : \"unanswered-vote\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"Would you rather \", optionOne.text), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, optionOne.votes.length, \" of \", totalVotes, \" votes (\", optionOne.votes.length / totalVotes * 100, \"%)\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: optionTwo.votes.includes(authedUser) ? \"answered-vote\" : \"unanswered-vote\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, \"Would you rather \", optionTwo.text), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, optionTwo.votes.length, \" of \", totalVotes, \" votes (\", optionTwo.votes.length / totalVotes * 100, \"%)\")))))));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}, props) {\n  const {\n    question_id\n  } = props.match.params;\n  return {\n    id: question_id,\n    authedUser,\n    question: !questions[question_id] ? {} : questions[question_id],\n    questionAuthor: !questions[question_id] ? {} : users[questions[question_id].author]\n  };\n}\n\nexport default connect(mapStateToProps)(Question);","map":{"version":3,"sources":["/Users/brunonovarini/project-would-you-rather/src/components/Question.js"],"names":["React","Component","connect","handleAddQuestionAnswer","Paper","Typography","Divider","Grid","Question","state","selectedOption","handleOptionChange","e","setState","target","value","handleAnswer","preventDefault","dispatch","authedUser","props","question_id","match","params","qid","answer","render","question","questionAuthor","Object","keys","length","optionOne","optionTwo","name","avatarURL","answered","votes","includes","totalVotes","text","mapStateToProps","users","questions","id","author"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddQuestionAnswer } from \"../actions/shared\";\nimport { Paper, Typography, Divider, Grid } from \"@material-ui/core\";\n\nclass Question extends Component {\n  state = {\n    selectedOption: null,\n  };\n\n  handleOptionChange = (e) => {\n    this.setState({\n      selectedOption: e.target.value,\n    });\n  };\n\n  handleAnswer = (e) => {\n    e.preventDefault();\n\n    const { dispatch, authedUser } = this.props;\n    const { question_id } = this.props.match.params;\n\n    dispatch(\n      handleAddQuestionAnswer({\n        qid: question_id,\n        authedUser,\n        answer: this.state.selectedOption,\n      })\n    );\n  };\n\n  render() {\n    const { question, questionAuthor, authedUser } = this.props;\n\n    //Handling question id not found\n    if (Object.keys(question).length === 0) {\n      return <p>This question doesn't exist</p>;\n    }\n\n    const { optionOne, optionTwo } = question;\n    const { name, avatarURL } = questionAuthor;\n\n    const answered =\n      optionOne.votes.includes(authedUser) ||\n      optionTwo.votes.includes(authedUser);\n\n    const totalVotes = optionOne.votes.length + optionTwo.votes.length;\n\n    return (\n      <div>\n        <Paper elevation={2} className=\"poll-container\">\n          <Typography variant=\"h6\" component=\"h4\">\n            {!answered ? `${name} asks` : `Asked by ${name}`}\n          </Typography>\n          <Divider light />\n          <Grid\n            container\n            direction=\"row\"\n            alignContent=\"center\"\n            justify=\"space-between\"\n          >\n            <Grid item className=\"question-info-container\">\n              <img\n                src={avatarURL}\n                alt=\"User avatar\"\n                className=\"question-avatar\"\n              />\n            </Grid>\n            <Grid item className=\"question-info-container\">\n              <Typography variant=\"h5\">\n                {!answered ? \"Would you rather\" : \"Results\"}\n              </Typography>\n              {!answered ? (\n                <form onSubmit={this.handleAnswer}>\n                  <input\n                    type=\"radio\"\n                    value=\"optionOne\"\n                    checked={this.state.selectedOption === \"optionOne\"}\n                    onChange={this.handleOptionChange}\n                  />\n                  {optionOne.text}\n                  <br></br>\n                  <input\n                    type=\"radio\"\n                    value=\"optionTwo\"\n                    checked={this.state.selectedOption === \"optionTwo\"}\n                    onChange={this.handleOptionChange}\n                  />\n                  {optionTwo.text}\n                  <br></br>\n                  <button\n                    type=\"submit\"\n                    disabled={this.state.selectedOption === null}\n                  >\n                    Submit\n                  </button>\n                </form>\n              ) : (\n                <div>\n                  <div\n                    className={\n                      optionOne.votes.includes(authedUser)\n                        ? \"answered-vote\"\n                        : \"unanswered-vote\"\n                    }\n                  >\n                    <Typography variant=\"h6\">\n                      Would you rather {optionOne.text}\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      {optionOne.votes.length} of {totalVotes} votes (\n                      {(optionOne.votes.length / totalVotes) * 100}%)\n                    </Typography>\n                  </div>\n                  <div\n                    className={\n                      optionTwo.votes.includes(authedUser)\n                        ? \"answered-vote\"\n                        : \"unanswered-vote\"\n                    }\n                  >\n                    <Typography variant=\"h6\">\n                      Would you rather {optionTwo.text}\n                    </Typography>\n                    <Typography variant=\"body1\">\n                      {optionTwo.votes.length} of {totalVotes} votes (\n                      {(optionTwo.votes.length / totalVotes) * 100}%)\n                    </Typography>\n                  </div>\n                </div>\n              )}\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }, props) {\n  const { question_id } = props.match.params;\n\n  return {\n    id: question_id,\n    authedUser,\n    question: !questions[question_id] ? {} : questions[question_id],\n    questionAuthor: !questions[question_id]\n      ? {}\n      : users[questions[question_id].author],\n  };\n}\n\nexport default connect(mapStateToProps)(Question);\n"]},"metadata":{},"sourceType":"module"}