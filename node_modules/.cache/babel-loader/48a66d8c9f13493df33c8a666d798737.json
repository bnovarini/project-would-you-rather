{"ast":null,"code":"var _jsxFileName = \"/Users/brunonovarini/project-would-you-rather/src/components/Question.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Question extends Component {\n  render() {\n    const {\n      question,\n      questionAuthor,\n      authedUser\n    } = this.props;\n\n    if (question === null) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 14\n        }\n      }, \"This question doesn't exist\");\n    }\n\n    const {\n      optionOne,\n      optionTwo\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = questionAuthor;\n    const answered = optionOne.votes.includes(authedUser) || optionTwo.votes.includes(authedUser);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, !answered ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, name, \" asks:\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: avatarURL,\n      alt: \"Author avatar\",\n      className: \"question-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"Would you rather...\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"option\",\n      value: optionOne.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }), optionOne.text, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"option\",\n      value: optionTwo.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }), optionTwo.text, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, \"Submit\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, name, \" asked:\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: avatarURL,\n      alt: \"Author avatar\",\n      className: \"question-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}, {\n  id\n}) {\n  const question = questions[id];\n  return {\n    authedUser,\n    question: question,\n    questionAuthor: users[question.author]\n  };\n}\n\nexport default connect(mapStateToProps)(Question);","map":{"version":3,"sources":["/Users/brunonovarini/project-would-you-rather/src/components/Question.js"],"names":["React","Component","connect","Question","render","question","questionAuthor","authedUser","props","optionOne","optionTwo","name","avatarURL","answered","votes","includes","text","mapStateToProps","users","questions","id","author"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,cAAZ;AAA4BC,MAAAA;AAA5B,QAA2C,KAAKC,KAAtD;;AAEA,QAAIH,QAAQ,KAAK,IAAjB,EAAuB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAP;AACD;;AAED,UAAM;AAAEI,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2BL,QAAjC;AACA,UAAM;AAAEM,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAsBN,cAA5B;AAEA,UAAMO,QAAQ,GACZJ,SAAS,CAACK,KAAV,CAAgBC,QAAhB,CAAyBR,UAAzB,KACAG,SAAS,CAACI,KAAV,CAAgBC,QAAhB,CAAyBR,UAAzB,CAFF;AAIA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACM,QAAD,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAL,WADF,eAEE;AACE,MAAA,GAAG,EAAEC,SADP;AAEE,MAAA,GAAG,EAAC,eAFN;AAGE,MAAA,SAAS,EAAC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,QAAzB;AAAkC,MAAA,KAAK,EAAEH,SAAS,CAACO,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGP,SAAS,CAACO,IAFb,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,QAAzB;AAAkC,MAAA,KAAK,EAAEN,SAAS,CAACM,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKGN,SAAS,CAACM,IALb,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,eAOE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CARF,CADD,gBAoBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,IAAL,YADF,eAEE;AACE,MAAA,GAAG,EAAEC,SADP;AAEE,MAAA,GAAG,EAAC,eAFN;AAGE,MAAA,SAAS,EAAC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CArBJ,CADF;AAiCD;;AAhD8B;;AAmDjC,SAASK,eAAT,CAAyB;AAAEV,EAAAA,UAAF;AAAcW,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAzB,EAA2D;AAAEC,EAAAA;AAAF,CAA3D,EAAmE;AACjE,QAAMf,QAAQ,GAAGc,SAAS,CAACC,EAAD,CAA1B;AAEA,SAAO;AACLb,IAAAA,UADK;AAELF,IAAAA,QAAQ,EAAEA,QAFL;AAGLC,IAAAA,cAAc,EAAEY,KAAK,CAACb,QAAQ,CAACgB,MAAV;AAHhB,GAAP;AAKD;;AAED,eAAenB,OAAO,CAACe,eAAD,CAAP,CAAyBd,QAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Question extends Component {\n  render() {\n    const { question, questionAuthor, authedUser } = this.props;\n\n    if (question === null) {\n      return <p>This question doesn't exist</p>;\n    }\n\n    const { optionOne, optionTwo } = question;\n    const { name, avatarURL } = questionAuthor;\n\n    const answered =\n      optionOne.votes.includes(authedUser) ||\n      optionTwo.votes.includes(authedUser);\n\n    return (\n      <div>\n        {!answered ? (\n          <div>\n            <h3>{name} asks:</h3>\n            <img\n              src={avatarURL}\n              alt=\"Author avatar\"\n              className=\"question-avatar\"\n            />\n            <h4>Would you rather...</h4>\n            <form>\n              <input type=\"radio\" name=\"option\" value={optionOne.text} />\n              {optionOne.text}\n              <br></br>\n              <input type=\"radio\" name=\"option\" value={optionTwo.text} />\n              {optionTwo.text}\n              <br></br>\n              <button type=\"button\">Submit</button>\n            </form>\n          </div>\n        ) : (\n          <div>\n            <h3>{name} asked:</h3>\n            <img\n              src={avatarURL}\n              alt=\"Author avatar\"\n              className=\"question-avatar\"\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }, { id }) {\n  const question = questions[id];\n\n  return {\n    authedUser,\n    question: question,\n    questionAuthor: users[question.author],\n  };\n}\n\nexport default connect(mapStateToProps)(Question);\n"]},"metadata":{},"sourceType":"module"}