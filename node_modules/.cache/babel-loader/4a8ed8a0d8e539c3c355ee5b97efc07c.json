{"ast":null,"code":"var _jsxFileName = \"/Users/brunonovarini/project-would-you-rather/src/components/Question.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Question extends Component {\n  render() {\n    const {\n      question,\n      questionAuthor,\n      authedUser\n    } = this.props;\n\n    if (question === {}) {\n      console.log(question);\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 14\n        }\n      }, \"This question doesn't exist\");\n    }\n\n    const {\n      optionOne,\n      optionTwo\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = questionAuthor;\n    const answered = optionOne.votes.includes(authedUser) || optionTwo.votes.includes(authedUser);\n    const totalVotes = optionOne.votes.length + optionTwo.votes.length;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, !answered ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, name, \" asks:\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: avatarURL,\n      alt: \"Author avatar\",\n      className: \"question-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"Would you rather...\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"option\",\n      value: optionOne.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }), optionOne.text, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"option\",\n      value: optionTwo.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }), optionTwo.text, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, \"Submit\"))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"Asked by \", name, \":\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: avatarURL,\n      alt: \"Author avatar\",\n      className: \"question-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, \"Results\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: optionOne.votes.includes(authedUser) ? \"answered-vote\" : \"unanswered-vote\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, \"Would you rather \", optionOne.text), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, optionOne.votes.length, \" of \", totalVotes, \" votes (\", optionOne.votes.length / totalVotes * 100, \"%)\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: optionTwo.votes.includes(authedUser) ? \"answered-vote\" : \"unanswered-vote\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Would you rather \", optionTwo.text), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, optionTwo.votes.length, \" of \", totalVotes, \" votes (\", optionTwo.votes.length / totalVotes * 100, \"%)\"))));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}, props) {\n  const {\n    id\n  } = props.match.params;\n  return {\n    id,\n    authedUser,\n    question: !questions[id] ? {} : questions[id],\n    questionAuthor: !questions[id] ? {} : users[questions[id].author]\n  };\n}\n\nexport default connect(mapStateToProps)(Question);","map":{"version":3,"sources":["/Users/brunonovarini/project-would-you-rather/src/components/Question.js"],"names":["React","Component","connect","Question","render","question","questionAuthor","authedUser","props","console","log","optionOne","optionTwo","name","avatarURL","answered","votes","includes","totalVotes","length","text","mapStateToProps","users","questions","id","match","params","author"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Question extends Component {\n  render() {\n    const { question, questionAuthor, authedUser } = this.props;\n\n    if (question === {}) {\n      console.log(question);\n      return <p>This question doesn't exist</p>;\n    }\n\n    const { optionOne, optionTwo } = question;\n    const { name, avatarURL } = questionAuthor;\n\n    const answered =\n      optionOne.votes.includes(authedUser) ||\n      optionTwo.votes.includes(authedUser);\n\n    const totalVotes = optionOne.votes.length + optionTwo.votes.length;\n\n    return (\n      <div>\n        {!answered ? (\n          <div>\n            <h3>{name} asks:</h3>\n            <img\n              src={avatarURL}\n              alt=\"Author avatar\"\n              className=\"question-avatar\"\n            />\n            <h4>Would you rather...</h4>\n            <form>\n              <input type=\"radio\" name=\"option\" value={optionOne.text} />\n              {optionOne.text}\n              <br></br>\n              <input type=\"radio\" name=\"option\" value={optionTwo.text} />\n              {optionTwo.text}\n              <br></br>\n              <button type=\"button\">Submit</button>\n            </form>\n          </div>\n        ) : (\n          <div>\n            <h3>Asked by {name}:</h3>\n            <img\n              src={avatarURL}\n              alt=\"Author avatar\"\n              className=\"question-avatar\"\n            />\n            <h4>Results</h4>\n            <div\n              className={\n                optionOne.votes.includes(authedUser)\n                  ? \"answered-vote\"\n                  : \"unanswered-vote\"\n              }\n            >\n              <p>Would you rather {optionOne.text}</p>\n              <p>\n                {optionOne.votes.length} of {totalVotes} votes (\n                {(optionOne.votes.length / totalVotes) * 100}%)\n              </p>\n            </div>\n            <div\n              className={\n                optionTwo.votes.includes(authedUser)\n                  ? \"answered-vote\"\n                  : \"unanswered-vote\"\n              }\n            >\n              <p>Would you rather {optionTwo.text}</p>\n              <p>\n                {optionTwo.votes.length} of {totalVotes} votes (\n                {(optionTwo.votes.length / totalVotes) * 100}%)\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }, props) {\n  const { id } = props.match.params;\n\n  return {\n    id,\n    authedUser,\n    question: !questions[id] ? {} : questions[id],\n    questionAuthor: !questions[id] ? {} : users[questions[id].author],\n  };\n}\n\nexport default connect(mapStateToProps)(Question);\n"]},"metadata":{},"sourceType":"module"}