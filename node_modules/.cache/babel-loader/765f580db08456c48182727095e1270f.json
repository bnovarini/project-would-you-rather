{"ast":null,"code":"var _jsxFileName = \"/Users/brunonovarini/project-would-you-rather/src/components/Leaderboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Leaderboard extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 12\n      }\n    }, \"Leaderboard\");\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}) {\n  return {\n    authedUser,\n    questionIds: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n    answered: users[authedUser].answers\n  };\n}\n\nexport default connect(mapStateToProps)(Leaderboard);","map":{"version":3,"sources":["/Users/brunonovarini/project-would-you-rather/src/components/Leaderboard.js"],"names":["React","Component","connect","Leaderboard","render","mapStateToProps","authedUser","users","questions","questionIds","Object","keys","sort","a","b","timestamp","answered","answers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AAClCG,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AAHiC;;AAKpC,SAASC,eAAT,CAAyB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAzB,EAA2D;AACzD,SAAO;AACLF,IAAAA,UADK;AAELG,IAAAA,WAAW,EAAEC,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuBI,IAAvB,CACX,CAACC,CAAD,EAAIC,CAAJ,KAAUN,SAAS,CAACM,CAAD,CAAT,CAAaC,SAAb,GAAyBP,SAAS,CAACK,CAAD,CAAT,CAAaE,SADrC,CAFR;AAKLC,IAAAA,QAAQ,EAAET,KAAK,CAACD,UAAD,CAAL,CAAkBW;AALvB,GAAP;AAOD;;AAED,eAAef,OAAO,CAACG,eAAD,CAAP,CAAyBF,WAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Leaderboard extends Component {\n  render() {\n    return <div>Leaderboard</div>;\n  }\n}\nfunction mapStateToProps({ authedUser, users, questions }) {\n  return {\n    authedUser,\n    questionIds: Object.keys(questions).sort(\n      (a, b) => questions[b].timestamp - questions[a].timestamp\n    ),\n    answered: users[authedUser].answers,\n  };\n}\n\nexport default connect(mapStateToProps)(Leaderboard);\n"]},"metadata":{},"sourceType":"module"}