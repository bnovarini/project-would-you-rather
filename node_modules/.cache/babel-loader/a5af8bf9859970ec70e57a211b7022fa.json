{"ast":null,"code":"var _jsxFileName = \"/Users/brunonovarini/project-would-you-rather/src/components/Poll.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Paper, Typography, Divider, Grid } from \"@material-ui/core\";\n\nclass Poll extends Component {\n  render() {\n    const {\n      id,\n      question,\n      questionAuthor\n    } = this.props;\n    const {\n      optionOne\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = questionAuthor;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      elevation: 2,\n      className: \"poll-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, `${name} asks`), /*#__PURE__*/React.createElement(Divider, {\n      light: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      alignContent: \"center\",\n      justify: \"space-around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: avatarURL,\n      alt: \"User avatar\",\n      className: \"question-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      className: \"poll-info-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, \"Would you rather...\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, optionOne.text, \" or...\"), /*#__PURE__*/React.createElement(Link, {\n      to: `/questions/${id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: \"span\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"View Poll\"))))));\n  }\n\n}\n\nfunction mapStateToProps({\n  users,\n  questions\n}, {\n  id\n}) {\n  const question = questions[id];\n  return {\n    question: question,\n    questionAuthor: users[question.author]\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Poll));","map":{"version":3,"sources":["/Users/brunonovarini/project-would-you-rather/src/components/Poll.js"],"names":["React","Component","connect","Link","withRouter","Button","Paper","Typography","Divider","Grid","Poll","render","id","question","questionAuthor","props","optionOne","name","avatarURL","text","mapStateToProps","users","questions","author"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Paper, Typography, Divider, Grid } from \"@material-ui/core\";\n\nclass Poll extends Component {\n  render() {\n    const { id, question, questionAuthor } = this.props;\n\n    const { optionOne } = question;\n    const { name, avatarURL } = questionAuthor;\n\n    return (\n      <div>\n        <Paper elevation={2} className=\"poll-container\">\n          <Typography variant=\"h6\" component=\"h4\">{`${name} asks`}</Typography>\n          <Divider light />\n          <Grid\n            container\n            direction=\"row\"\n            alignContent=\"center\"\n            justify=\"space-around\"\n          >\n            <Grid item>\n              <img\n                src={avatarURL}\n                alt=\"User avatar\"\n                className=\"question-avatar\"\n              />\n            </Grid>\n            <Grid item className=\"poll-info-container\">\n              <Typography variant=\"h6\">Would you rather...</Typography>\n              <Typography variant=\"body1\">{optionOne.text} or...</Typography>\n              <Link to={`/questions/${id}`}>\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\n                  View Poll\n                </Button>\n              </Link>\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ users, questions }, { id }) {\n  const question = questions[id];\n\n  return {\n    question: question,\n    questionAuthor: users[question.author],\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Poll));\n"]},"metadata":{},"sourceType":"module"}