{"ast":null,"code":"import { _getUsers, _getQuestions } from \"_DATA.js\";\nimport { receiveUsers } from \"./users\";\nimport { receiveQuestions } from \"./questions\";\nimport { setAuthedUser } from \"./authedUser\";\nimport { showLoading, hideLoading } from \"react-redux-loading\";\nconst AUTHED_ID = \"sarahedo\";\nexport function handleInitialData() {\n  return dispatch => {\n    dispatch(showLoading());\n    return Promise.all([_getUsers(), _getQuestions()]).then(({\n      users,\n      questions\n    }) => {\n      dispatch(receiveUsers(users));\n      dispatch(receiveQuestions(questions));\n      dispatch(setAuthedUser(AUTHED_ID));\n      dispatch(hideLoading());\n    });\n  };\n}","map":{"version":3,"sources":["/Users/brunonovarini/project-would-you-rather/src/actions/shared.js"],"names":["_getUsers","_getQuestions","receiveUsers","receiveQuestions","setAuthedUser","showLoading","hideLoading","AUTHED_ID","handleInitialData","dispatch","Promise","all","then","users","questions"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,aAApB,QAAyC,UAAzC;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,qBAAzC;AAEA,MAAMC,SAAS,GAAG,UAAlB;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAClC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACJ,WAAW,EAAZ,CAAR;AACA,WAAOK,OAAO,CAACC,GAAR,CAAY,CAACX,SAAS,EAAV,EAAcC,aAAa,EAA3B,CAAZ,EAA4CW,IAA5C,CACL,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAA0B;AACxBL,MAAAA,QAAQ,CAACP,YAAY,CAACW,KAAD,CAAb,CAAR;AACAJ,MAAAA,QAAQ,CAACN,gBAAgB,CAACW,SAAD,CAAjB,CAAR;AACAL,MAAAA,QAAQ,CAACL,aAAa,CAACG,SAAD,CAAd,CAAR;AACAE,MAAAA,QAAQ,CAACH,WAAW,EAAZ,CAAR;AACD,KANI,CAAP;AAQD,GAVD;AAWD","sourcesContent":["import { _getUsers, _getQuestions } from \"_DATA.js\";\nimport { receiveUsers } from \"./users\";\nimport { receiveQuestions } from \"./questions\";\nimport { setAuthedUser } from \"./authedUser\";\nimport { showLoading, hideLoading } from \"react-redux-loading\";\n\nconst AUTHED_ID = \"sarahedo\";\n\nexport function handleInitialData() {\n  return (dispatch) => {\n    dispatch(showLoading());\n    return Promise.all([_getUsers(), _getQuestions()]).then(\n      ({ users, questions }) => {\n        dispatch(receiveUsers(users));\n        dispatch(receiveQuestions(questions));\n        dispatch(setAuthedUser(AUTHED_ID));\n        dispatch(hideLoading());\n      }\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"module"}