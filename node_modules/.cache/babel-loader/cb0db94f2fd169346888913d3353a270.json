{"ast":null,"code":"var _jsxFileName = \"/Users/brunonovarini/project-would-you-rather/src/components/Question.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Question extends Component {\n  render() {\n    const {\n      question,\n      user\n    } = this.props;\n\n    if (question === null) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 14\n        }\n      }, \"This question doesn't exist\");\n    }\n\n    const {\n      author,\n      optionOne,\n      optionTwo\n    } = question;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"test\"));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}, {\n  id\n}) {\n  const question = questions[id];\n  return {\n    authedUser,\n    question: question,\n    user: users[question.author]\n  };\n}\n\nexport default connect(mapStateToProps)(Question);","map":{"version":3,"sources":["/Users/brunonovarini/project-would-you-rather/src/components/Question.js"],"names":["React","Component","connect","Question","render","question","user","props","author","optionOne","optionTwo","mapStateToProps","authedUser","users","questions","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAqB,KAAKC,KAAhC;;AAEA,QAAIF,QAAQ,KAAK,IAAjB,EAAuB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAP;AACD;;AAED,UAAM;AAAEG,MAAAA,MAAF;AAAUC,MAAAA,SAAV;AAAqBC,MAAAA;AAArB,QAAmCL,QAAzC;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF;AAKD;;AAf8B;;AAkBjC,SAASM,eAAT,CAAyB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAzB,EAA2D;AAAEC,EAAAA;AAAF,CAA3D,EAAmE;AACjE,QAAMV,QAAQ,GAAGS,SAAS,CAACC,EAAD,CAA1B;AAEA,SAAO;AACLH,IAAAA,UADK;AAELP,IAAAA,QAAQ,EAAEA,QAFL;AAGLC,IAAAA,IAAI,EAAEO,KAAK,CAACR,QAAQ,CAACG,MAAV;AAHN,GAAP;AAKD;;AAED,eAAeN,OAAO,CAACS,eAAD,CAAP,CAAyBR,QAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Question extends Component {\n  render() {\n    const { question, user } = this.props;\n\n    if (question === null) {\n      return <p>This question doesn't exist</p>;\n    }\n\n    const { author, optionOne, optionTwo } = question;\n\n    return (\n      <div>\n        <h1>test</h1>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }, { id }) {\n  const question = questions[id];\n\n  return {\n    authedUser,\n    question: question,\n    user: users[question.author],\n  };\n}\n\nexport default connect(mapStateToProps)(Question);\n"]},"metadata":{},"sourceType":"module"}