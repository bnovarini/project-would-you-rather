{"ast":null,"code":"var _jsxFileName = \"/Users/brunonovarini/project-would-you-rather/src/components/PollDashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Poll from \"./Poll\";\n\nclass PollDashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      answered: false\n    };\n\n    this.toggleAnswered = e => {\n      e.preventDefault();\n      this.setState(currentState => ({\n        answered: !currentState.answered\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleAnswered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Unanswered Questions\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.toggleAnswered,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Answered Questions\"))), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, this.state.answers ? \"Answered Questions\" : \"Unanswered Questions\"), this.state.answered === true ? this.props.questionIds.map(id => this.props.answered[id] != null && /*#__PURE__*/React.createElement(Poll, {\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 58\n      }\n    })) : this.props.questionIds.map(id => this.props.answered[id] == null && /*#__PURE__*/React.createElement(Poll, {\n      id: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 58\n      }\n    })));\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  users,\n  questions\n}) {\n  return {\n    authedUser,\n    questionIds: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n    answered: users[authedUser].answers\n  };\n}\n\nexport default connect(mapStateToProps)(PollDashboard);","map":{"version":3,"sources":["/Users/brunonovarini/project-would-you-rather/src/components/PollDashboard.js"],"names":["React","Component","connect","Poll","PollDashboard","state","answered","toggleAnswered","e","preventDefault","setState","currentState","render","answers","props","questionIds","map","id","mapStateToProps","authedUser","users","questions","Object","keys","sort","a","b","timestamp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCI,KADoC,GAC5B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD4B;;AAAA,SAKpCC,cALoC,GAKlBC,CAAD,IAAO;AACtBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAeC,YAAD,KAAmB;AAC/BL,QAAAA,QAAQ,EAAE,CAACK,YAAY,CAACL;AADO,OAAnB,CAAd;AAGD,KAVmC;AAAA;;AAYpCM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKL,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKA,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAJF,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWQ,OAAX,GAAqB,oBAArB,GAA4C,sBAD/C,CAVF,EAaG,KAAKR,KAAL,CAAWC,QAAX,KAAwB,IAAxB,GACG,KAAKQ,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CACGC,EAAD,IAAQ,KAAKH,KAAL,CAAWR,QAAX,CAAoBW,EAApB,KAA2B,IAA3B,iBAAmC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEA,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7C,CADH,GAIG,KAAKH,KAAL,CAAWC,WAAX,CAAuBC,GAAvB,CACGC,EAAD,IAAQ,KAAKH,KAAL,CAAWR,QAAX,CAAoBW,EAApB,KAA2B,IAA3B,iBAAmC,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEA,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7C,CAjBN,CADF;AAuBD;;AApCmC;;AAuCtC,SAASC,eAAT,CAAyB;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAzB,EAA2D;AACzD,SAAO;AACLF,IAAAA,UADK;AAELJ,IAAAA,WAAW,EAAEO,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,IAAvB,CACX,CAACC,CAAD,EAAIC,CAAJ,KAAUL,SAAS,CAACK,CAAD,CAAT,CAAaC,SAAb,GAAyBN,SAAS,CAACI,CAAD,CAAT,CAAaE,SADrC,CAFR;AAKLrB,IAAAA,QAAQ,EAAEc,KAAK,CAACD,UAAD,CAAL,CAAkBN;AALvB,GAAP;AAOD;;AAED,eAAeX,OAAO,CAACgB,eAAD,CAAP,CAAyBd,aAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Poll from \"./Poll\";\n\nclass PollDashboard extends Component {\n  state = {\n    answered: false,\n  };\n\n  toggleAnswered = (e) => {\n    e.preventDefault();\n    this.setState((currentState) => ({\n      answered: !currentState.answered,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"center\">\n        <ul>\n          <li>\n            <button onClick={this.toggleAnswered}>Unanswered Questions</button>\n          </li>\n          <li>\n            <button onClick={this.toggleAnswered}>Answered Questions</button>\n          </li>\n        </ul>\n\n        <h1>\n          {this.state.answers ? \"Answered Questions\" : \"Unanswered Questions\"}\n        </h1>\n        {this.state.answered === true\n          ? this.props.questionIds.map(\n              (id) => this.props.answered[id] != null && <Poll id={id} />\n            )\n          : this.props.questionIds.map(\n              (id) => this.props.answered[id] == null && <Poll id={id} />\n            )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, users, questions }) {\n  return {\n    authedUser,\n    questionIds: Object.keys(questions).sort(\n      (a, b) => questions[b].timestamp - questions[a].timestamp\n    ),\n    answered: users[authedUser].answers,\n  };\n}\n\nexport default connect(mapStateToProps)(PollDashboard);\n"]},"metadata":{},"sourceType":"module"}